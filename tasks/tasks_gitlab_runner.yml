

- block:

    - name: GITLAB Runner | Key
      apt_key:  url=https://packages.gitlab.com/runner/gitlab-ci-multi-runner/gpgkey state=present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - gitlab

    - name: GITLAB Runner |  Dependencies
      apt: name='{{ item }}' state=present
      retries: 3
      register: result
      until: result is not failed
      with_items:
        - apt-transport-https
      become: yes
      tags:
        - gitlab

    - name: GITLAB Runner | Apt repo
      apt_repository:
        repo: >
          deb https://packages.gitlab.com/runner/gitlab-ci-multi-runner/{{ ansible_distribution | lower }}/
          {{ ansible_distribution_release }} main
        state: present
        filename: runner_gitlab-runner
      become: yes
      tags:
        - gitlab

    - name: GITLAB Runner | Apt src repo
      apt_repository:
        repo: >
          deb-src https://packages.gitlab.com/runner/gitlab-ci-multi-runner/{{ ansible_distribution | lower }}/
          {{ ansible_distribution_release }} main
        state: present
        filename: runner_gitlab-runner        
      become: yes

    - name: GITLAB Runner | Install
      apt: name=gitlab-ci-multi-runner state=present update_cache=yes
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - gitlab

  when: ansible_os_family == 'Debian'

- block:

    - name: GITLAB Runner | Install GitLab GPG key
      rpm_key: key=https://packages.gitlab.com/runner/gitlab-ci-multi-runner/gpgkey state=present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - gitlab

    - name: GITLAB Runner | Install dependencies
      yum: name='{{ item }}' state=present
      retries: 3
      register: result
      until: result is not failed
      with_items:
        - pygpgme
        - yum-utils
      become: yes
      tags:
        - gitlab

    - name: GITLAB Runner | template rpm repo
      uri:
        url: "{{ yum_repo_config_url }}"
        method: GET
        return_content: yes
        status_code: 200
      register: repo_content
      tags:
        - gitlab

    - debug: var="repo_content"

    # - name: Gitlab Runner | store repo
    #   copy: content="{{ repo_content.content }}" dest=/etc/yum.repos.d/runner_gitlab.repo
    #   become: yes
    #   tags:
    #     - gitlab

    # - name: Gitlab Runner | chore - do not validate gpgatm
    #   command: "sed -i'' 's/repo_gpgcheck=1/repo_gpgcheck=0/' /etc/yum.repos.d/runner_gitlab.repo"
    #   become: yes
    #   tags:
    #     - gitlab

    - name: Preset fact
      set_fact:
        yum_distribution: "{{ ansible_distribution | lower }}"

    - name: Preset fact
      set_fact:
        yum_distribution: "el"
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'


    - name:  GITLAB Runner | template rpm repo (1/2)
      yum_repository:
        name: runner_gitlab-ci-multi-runner
        description: runner_gitlab-ci-multi-runner
        baseurl: "https://packages.gitlab.com/runner/gitlab-ci-multi-runner/{{ yum_distribution | lower }}/{{ ansible_distribution_major_version }}/$basearch"
        repo_gpgcheck: no
        gpgcheck: no
        enabled: yes
        gpgkey: "https://packages.gitlab.com/runner/gitlab-ci-multi-runner/gpgkey"
        sslverify: yes
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt
        metadata_expire: 300
        file: runner_gitlab.repo
      become: yes
      tags:
        - skip_ansible_lint

    - name: GITLAB Runner | template rpm source repo (2/2)
      yum_repository:
        name: runner_gitlab-ci-multi-runner-source
        description: runner_gitlab-ci-multi-runner-source
        baseurl: "https://packages.gitlab.com/runner/gitlab-ci-multi-runner/{{ yum_distribution | lower }}/{{ ansible_distribution_major_version }}/SRPMS"
        repo_gpgcheck: no
        gpgcheck: no
        enabled: yes
        gpgkey: "https://packages.gitlab.com/runner/gitlab-ci-multi-runner/gpgkey"
        sslverify: yes
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt
        metadata_expire: 300
        file: runner_gitlab.repo
      become: yes

    - name: GITLAB Runner | Install GitLab Runner
      yum: name=gitlab-ci-multi-runner state=present update_cache=yes
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - gitlab

  when: ansible_os_family == 'RedHat'

- name: GITLAB Runner | Check if registered
  command: gitlab-runner list
  register: registered_runners
  ignore_errors: true
  changed_when: False

- debug: var="registered_runners"

- name: GITLAB Runner | Tune config (base)
  lineinfile:
    dest: /etc/gitlab-runner/config.toml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.insertafter | default('EOF') }}"
  with_items: "{{ config_toml_base_properties | default([]) }}"
  become: yes
  tags:
    - gitlab

- name: GITLAB Runner | Tune config (extra)
  lineinfile:
    dest: /etc/gitlab-runner/config.toml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.insertafter | default('EOF') }}"
  with_items: "{{ config_toml_extra_properties | default([]) }}"
  become: yes
  tags:
    - gitlab

- name: GITLAB Runner | Add gitlab-runner user to additional groups, if needed
  user: name='gitlab-runner' groups="{{ item }}" append=yes
  with_items: "{{ gitlab_groups | default([]) }}"
  become: yes
  tags:
    - gitlab    

- name: Register runner to GitLab
  command: gitlab-runner register >
    --non-interactive
    --url '{{ gitlab_runner_coordinator_url }}'
    --registration-token '{{ gitlab_runner_registration_token }}'
    --description '{{ gitlab_runner_description }}'
    --tag-list '{{ gitlab_runner_tags | join(",") }}'
    --executor '{{ gitlab_runner_executor }}'
    --docker-image '{{ gitlab_runner_docker_image }}'
  when: registered_runners.stderr.find('\n'+gitlab_runner_description) == -1 and gitlab_runner_registration_token
  become: yes

- block:

    - name: GITLAB Runner | Check runner image pregenerated        
      stat:
        path: /var/lib/gitlab-runner/gitlab-runner-prebuilt.tar.xz
      become: yes  
      register: gitlabrunnerprebuilt
    
    - block:
       
        - name: GITLAB Runner | detected version
          shell: "gitlab-runner --version | grep Version: | awk '{print $2}'"
          register: detected_gitlab_version_raw

        - name: Set fact
          set_fact:
            detected_gitlab_version: "{{ detected_gitlab_version_raw.stdout }}"

        - name: GITLAB Runner | Template mk-prebuilt-images-fix.sh
          template: src="mk-prebuilt-images-fix.sh" dest="/usr/lib/gitlab-runner/mk-prebuilt-images-fix.sh" mode="u=rwx,g=rx,o=rx"
          become: yes
          tags:
            - gitlab

        - name: GITLAB Runner | Pregenerate images, allow fail (no docker)            
          shell: /usr/lib/gitlab-runner/mk-prebuilt-images-fix.sh
          args:
            chdir: /usr/lib/gitlab-runner/
            creates: /var/lib/gitlab-runner/gitlab-runner-prebuilt.tar.xz

      when: gitlabrunnerprebuilt.stat.exists == False

  when: ansible_os_family == 'Debian' and docker_test is not defined